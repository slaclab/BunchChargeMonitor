########################################################################################################################
# Summary:             BCM substitutions file to generate PVs for CPSW registers
# Author:              T. Eriksen <taine@slac.stanford.edu>
# Date:                6-may-2021
########################################################################################################################

########################################################################################################################
# Macros:
#   P,R: The PV name as P:R
#   DESC, PINI, SCAN, NELM, etc.: The same fields on the records
#   PORT: The asyn port name. It must match the port name given when calling "YCPSWASYNConfig" on st.cmd
#   PARAM: The asyn paramter name. It must be defined in the dictionary file and assigned to a register
#   AMC: The AMC hardware slot (0 or 1)
#   CHAN: Which channel the TORO is connected to on the AMC card.
########################################################################################################################



#======================================
# Register with ScalVal interfaces
#======================================

file "RegisterOut.template" { pattern
{ P,        R,              DESC,                                       PINI,   SCAN,       PORT,  PARAM       }
{ $(P):$(CHAN), NumSamp0,       "Number of samples 0"                     "NO",   "Passive",  $(PORT),    AMC$(AMC):CHAN$(CHAN):NumSamp0 }
{ $(P):$(CHAN), NumSamp1,       "Number of samples 1"                     "NO",   "Passive",  $(PORT),    AMC$(AMC):CHAN$(CHAN):NumSamp1 }
{ $(P):$(CHAN), TrigDelay1,     "Trigger delay 1"                         "NO",   "Passive",  $(PORT),    AMC$(AMC):CHAN$(CHAN):TrigDelay1 }
}


file "RegisterOutRBV.template" { pattern
{ P,           R,                DESC,                                     PINI,   SCAN,        PORT,  PARAM       }
{ $(P):$(CHAN), NumSamp0RBV,       "Number of samples 0"                     "YES",  "1 second",  $(PORT),    AMC$(AMC):CHAN$(CHAN):NumSamp0 }
{ $(P):$(CHAN), NumSamp1RBV,       "Number of samples 1"                     "YES",  "1 second",  $(PORT),    AMC$(AMC):CHAN$(CHAN):NumSamp1 }
{ $(P):$(CHAN), TrigDelay1RBV,     "Trigger delay 1"                         "YES",  "1 second",  $(PORT),    AMC$(AMC):CHAN$(CHAN):TrigDelay1 }
}

#======================================
# Register with DoubleVal_RO interfaces
#======================================

file "RegisterDoubleIn.template" { pattern
{ P,    R,                             DESC,             PINI,      SCAN,       PORT,   	EGU,    		PARAM    , HOPR,   LOPR,   LOLO,    LOW,   HIGH,   HIHI}
{ $(P):$(CHAN), $(CHAN):TMIT_PC,        "Calculated TMIT in PC", "YES",  ".5 second",  $(PORT),     "pC",     AMC$(AMC):CHAN$(CHAN):TMIT         }
{ $(P):$(CHAN), MultResultA0,           "",                      "YES",  ".5 second",  $(PORT),     "",       AMC$(AMC):CHAN$(CHAN):MultResultA0 }
{ $(P):$(CHAN), MultResultA1,           "",                      "YES",  ".5 second",  $(PORT),     "",       AMC$(AMC):CHAN$(CHAN):MultResultA1 }
}

file "tmit_facet2.template" { pattern
{ P,    CHAN,                 DESC,                 PINI,    SCAN        }
{ $(P):$(CHAN), $(CHAN), "Calculated Number of Electrons",  "YES",   ".5 second" }
}

#======================================
# Register with DoubleVal interfaces
#======================================

file "RegisterDoubleOut.template" { pattern
{ P,              R,            DESC,                   PINI,    SCAN,        PORT,     EGU,                PARAM                  }
{ $(P):$(CHAN),     CoefA0,       "Coef A0 for 1st group",      "YES",  "Passive",   $(PORT),     "",     AMC$(AMC):CHAN$(CHAN):CoefA0      }
{ $(P):$(CHAN),     CoefA1,       "Coef A1 for 2nd group",      "YES",  "Passive",   $(PORT),     "",     AMC$(AMC):CHAN$(CHAN):CoefA1      }
{ $(P):$(CHAN),     CoefA2,       "Coef A2 for 3rd group",      "YES",  "Passive",   $(PORT),     "",     AMC$(AMC):CHAN$(CHAN):CoefA2      }
{ $(P):$(CHAN),     CoefOffset,   "Coef Offset",                "YES",  "Passive",   $(PORT),     "",     AMC$(AMC):CHAN$(CHAN):Coef_offset }
}

file "RegisterDoubleOutRBV.template" { pattern
{ P,           R,               DESC,                    PINI,   SCAN,       PORT,       EGU,               PARAM                  }
{ $(P):$(CHAN),     CoefA0RBV,    "Coef A0 for 1st group",      "YES", "1 second",  $(PORT),     "",     AMC$(AMC):CHAN$(CHAN):CoefA0      }
{ $(P):$(CHAN),     CoefA1RBV,    "Coef A1 for 2nd group",      "YES", "1 second",  $(PORT),     "",     AMC$(AMC):CHAN$(CHAN):CoefA1      }
{ $(P):$(CHAN),     CoefA2RBV,    "Coef A2 for 3rd group",      "YES", "1 second",  $(PORT),     "",     AMC$(AMC):CHAN$(CHAN):CoefA2      }
{ $(P):$(CHAN),     CoefOffsetRBV,"Coef Offset",                "YES", "1 second",  $(PORT),     "",     AMC$(AMC):CHAN$(CHAN):Coef_offset }
}














